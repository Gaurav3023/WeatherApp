{"ast":null,"code":"var _jsxFileName = \"/Users/gauravsaini/Downloads/weatherApp-Reactjs-master/src/forcast.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { format } from 'date-fns';\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport apiKeys from \"./apiKeys\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = city => {\n    axios.get(`${apiKeys.base}weather?q=${city != \"[object Object]\" ? city : query}&units=metric&APPID=${apiKeys.key}`).then(response => {\n      setWeather(response.data);\n      setQuery('');\n      const timezoneOffset = response.data.timezone;\n      const localDateTime = new Date(new Date().getTime() + timezoneOffset * 1000);\n      const formattedLocalTime = format(localDateTime, 'HH:mm:ss');\n      setLocalTime(formattedLocalTime);\n    }).catch(function (error) {\n      console.log(error);\n      setWeather('');\n      setQuery('');\n      setError({\n        message: 'Not Found',\n        query: query\n      });\n    });\n  };\n\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n\n\n    return i;\n  }\n\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true\n  };\n  useEffect(() => {\n    search(\"Toronto\");\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactAnimatedWeather, {\n    icon: props.icon,\n    color: defaults.color,\n    size: defaults.size,\n    animate: defaults.animate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.weather), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search any city\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.avishkaar.cc/workflow/newhp/search-white.png\",\n    onClick: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n    className: \"cityHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"temp\",\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Local Time \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }\n  }, localTime)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Temperature\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.temp), \"\\xB0c (\", weather.weather[0].main, \")\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Humidity\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.humidity), \"%\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Visibility\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, Math.round(weather.visibility), \" mi\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Wind Speed\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, Math.round(weather.wind.speed), \" Km/h\"))) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, error.query, \" \", error.message))));\n}\n\nexport default Forcast;","map":{"version":3,"sources":["/Users/gauravsaini/Downloads/weatherApp-Reactjs-master/src/forcast.js"],"names":["React","useState","useEffect","axios","format","ReactAnimatedWeather","apiKeys","Forcast","props","query","setQuery","error","setError","weather","setWeather","search","city","get","base","key","then","response","data","timezoneOffset","timezone","localDateTime","Date","getTime","formattedLocalTime","setLocalTime","catch","console","log","message","checkTime","i","defaults","color","size","animate","icon","e","target","value","main","name","sys","country","localTime","Math","round","temp","humidity","visibility","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { format } from 'date-fns';\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport apiKeys from \"./apiKeys\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const search = (city) => {\n    axios\n      .get(\n        `${apiKeys.base}weather?q=${city != \"[object Object]\" ? city : query}&units=metric&APPID=${apiKeys.key}`\n      )\n      .then((response) => {\n        setWeather(response.data);\n        setQuery('');\n        const timezoneOffset = response.data.timezone;\n        const localDateTime = new Date(new Date().getTime() + timezoneOffset * 1000);\n        const formattedLocalTime = format(localDateTime, 'HH:mm:ss');\n        setLocalTime(formattedLocalTime);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setWeather('');\n        setQuery('');\n        setError({ message: 'Not Found', query: query });\n      });\n  };\n\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n    return i;\n  }\n\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true,\n  };\n\n  useEffect(() => {\n    search(\"Toronto\");\n  }, []);\n\n  return (\n    <div className=\"forecast\">\n      <div className=\"forecast-icon\">\n        <ReactAnimatedWeather\n          icon={props.icon}\n          color={defaults.color}\n          size={defaults.size}\n          animate={defaults.animate}\n        />\n      </div>\n      <div className=\"today-weather\">\n        <h3>{props.weather}</h3>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search any city\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n          />\n          <div className=\"img-box\">\n            {\" \"}\n            <img\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\n              onClick={search}\n            />\n          </div>\n        </div>\n        <ul>\n          {typeof weather.main != \"undefined\" ? (\n            <div>\n              {\" \"}\n              <li className=\"cityHead\">\n                <p>\n                  {weather.name}, {weather.sys.country}\n                </p>\n                <img\n                  className=\"temp\"\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                />\n              </li>\n              <li>\n                Local Time <span className=\"temp\">{localTime}</span>\n              </li>\n              <li>\n                Temperature{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.temp)}°c ({weather.weather[0].main})\n                </span>\n              </li>\n              <li>\n                Humidity{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.humidity)}%\n                </span>\n              </li>\n              <li>\n                Visibility{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.visibility)} mi\n                </span>\n              </li>\n              <li>\n                Wind Speed{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.wind.speed)} Km/h\n                </span>\n              </li>\n            </div>\n          ) : (\n            <li>\n              {error.query} {error.message}\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default Forcast;\n"]},"metadata":{},"sourceType":"module"}