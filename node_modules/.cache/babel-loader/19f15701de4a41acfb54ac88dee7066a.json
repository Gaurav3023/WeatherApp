{"ast":null,"code":"var _jsxFileName = \"/Users/gauravsaini/Downloads/weatherApp-Reactjs-master/src/forcast.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [suggestions, setSuggestions] = useState([]);\n\n  const fetchSuggestions = value => {\n    axios.get(`${apiKeys.base}find?q=${value}&type=like&sort=population&cnt=5&APPID=${apiKeys.key}`).then(response => {\n      const suggestions = response.data.list.map(item => item.name);\n      setSuggestions(suggestions);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setQuery(value);\n    fetchSuggestions(value);\n  };\n\n  const handleSuggestionClick = suggestion => {\n    setQuery(suggestion);\n    setSuggestions([]); // Clear suggestions after selecting a city\n  };\n\n  const search = () => {\n    axios.get(`${apiKeys.base}weather?q=${query}&units=metric&APPID=${apiKeys.key}`).then(response => {\n      setWeather(response.data);\n      setQuery(\"\");\n      setSuggestions([]); // Clear suggestions after searching\n    }).catch(function (error) {\n      console.log(error);\n      setWeather(\"\");\n      setQuery(\"\");\n      setError({\n        message: \"Not Found\",\n        query: query\n      });\n    });\n  };\n\n  useEffect(() => {\n    search(\"Toronto\");\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactAnimatedWeather, {\n    icon: props.icon,\n    color: \"white\",\n    size: 112,\n    animate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, props.weather), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search any city\",\n    onChange: handleInputChange,\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, suggestions.map(suggestion => /*#__PURE__*/React.createElement(\"div\", {\n    key: suggestion,\n    className: \"suggestion-item\",\n    onClick: () => handleSuggestionClick(suggestion),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, suggestion))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.avishkaar.cc/workflow/newhp/search-white.png\",\n    onClick: search,\n    alt: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, typeof weather.main !== \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"cityHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"temp\",\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n    alt: \"Weather icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, error.query, \" \", error.message))));\n}\n\nexport default Forcast;","map":{"version":3,"sources":["/Users/gauravsaini/Downloads/weatherApp-Reactjs-master/src/forcast.js"],"names":["React","useState","useEffect","axios","apiKeys","ReactAnimatedWeather","Forcast","props","query","setQuery","error","setError","weather","setWeather","suggestions","setSuggestions","fetchSuggestions","value","get","base","key","then","response","data","list","map","item","name","catch","console","log","handleInputChange","e","target","handleSuggestionClick","suggestion","search","message","icon","main","sys","country"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [suggestions, setSuggestions] = useState([]);\n\n  const fetchSuggestions = (value) => {\n    axios\n      .get(\n        `${apiKeys.base}find?q=${value}&type=like&sort=population&cnt=5&APPID=${apiKeys.key}`\n      )\n      .then((response) => {\n        const suggestions = response.data.list.map((item) => item.name);\n        setSuggestions(suggestions);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setQuery(value);\n    fetchSuggestions(value);\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setQuery(suggestion);\n    setSuggestions([]); // Clear suggestions after selecting a city\n  };\n\n  const search = () => {\n    axios\n      .get(\n        `${apiKeys.base}weather?q=${query}&units=metric&APPID=${apiKeys.key}`\n      )\n      .then((response) => {\n        setWeather(response.data);\n        setQuery(\"\");\n        setSuggestions([]); // Clear suggestions after searching\n      })\n      .catch(function (error) {\n        console.log(error);\n        setWeather(\"\");\n        setQuery(\"\");\n        setError({ message: \"Not Found\", query: query });\n      });\n  };\n\n  useEffect(() => {\n    search(\"Toronto\");\n  }, []);\n\n  return (\n    <div className=\"forecast\">\n      <div className=\"forecast-icon\">\n        <ReactAnimatedWeather\n          icon={props.icon}\n          color=\"white\"\n          size={112}\n          animate={true}\n        />\n      </div>\n      <div className=\"today-weather\">\n        <h3>{props.weather}</h3>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search any city\"\n            onChange={handleInputChange}\n            value={query}\n          />\n          <div className=\"suggestions\">\n            {suggestions.map((suggestion) => (\n              <div\n                key={suggestion}\n                className=\"suggestion-item\"\n                onClick={() => handleSuggestionClick(suggestion)}\n              >\n                {suggestion}\n              </div>\n            ))}\n          </div>\n          <div className=\"img-box\">\n            {\" \"}\n            <img\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\n              onClick={search}\n              alt=\"Search\"\n            />\n          </div>\n        </div>\n        <ul>\n          {typeof weather.main !== \"undefined\" ? (\n            <div>\n              <li className=\"cityHead\">\n                <p>\n                  {weather.name}, {weather.sys.country}\n                </p>\n                <img\n                  className=\"temp\"\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                  alt=\"Weather icon\"\n                />\n              </li>\n              {/* ... (other details) */}\n            </div>\n          ) : (\n            <li>\n              {error.query} {error.message}\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Forcast;\n"]},"metadata":{},"sourceType":"module"}